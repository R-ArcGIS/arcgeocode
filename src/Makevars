TARGET_DIR = ./rust/target
LIBDIR = $(TARGET_DIR)/release
STATLIB = $(LIBDIR)/libarcgisgeocode.a
PKG_LIBS = -L$(LIBDIR) -larcgisgeocode -lssl
CRAN_FLAGS=

all: C_clean

$(SHLIB): $(STATLIB)

CARGOTMP = $(CURDIR)/.cargo
VENDOR_DIR = $(CURDIR)/vendor

$(STATLIB):
	# In some environments, ~/.cargo/bin might not be included in PATH, so we need
	# to set it here to ensure cargo can be invoked. It is appended to PATH and
	# therefore is only used if cargo is absent from the user's PATH.
	if [ "$(NOT_CRAN)" != "true" ]; then \
		CRAN_FLAGS=-j 2 --offline; \
		if [ -f ./rust/vendor.tar.xz ]; then \
			tar xf rust/vendor.tar.xz && \
			mkdir -p $(CARGOTMP) && \
			cp rust/vendor-config.toml $(CARGOTMP)/config.toml; \
		fi; \
		export CARGO_HOME=$(CARGOTMP); \
	fi && \
		export PATH="$(PATH):$(HOME)/.cargo/bin" && \
		cargo build $(CRAN_FLAGS) --lib --release --manifest-path=./rust/Cargo.toml --target-dir $(TARGET_DIR)
	if [ "$(NOT_CRAN)" != "true" ]; then \
		rm -Rf $(CARGOTMP) && \
		rm -Rf $(LIBDIR)/build; \
	fi

C_clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS)

clean:
		rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS) rust/target